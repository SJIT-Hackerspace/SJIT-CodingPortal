# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-09-10 04:34
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hackerspace', '0014_auto_20160910_0951'),
    ]

    operations = [
        migrations.CreateModel(
            name='Batches',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Programming_SubCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Tag Name')),
            ],
        ),
        migrations.CreateModel(
            name='ProgrammingQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('TestCases', models.CharField(max_length=200, verbose_name='Test Cases')),
                ('Output', models.CharField(max_length=200)),
                ('subCategory', models.CharField(choices=[(1, 'Strings'), (2, 'Dynamic Programming'), (3, 'Arrays'), (4, 'Data Structures')], max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('op1', models.CharField(max_length=200, verbose_name='Option1')),
                ('op2', models.CharField(max_length=200, verbose_name='Option2')),
                ('op3', models.CharField(max_length=200, verbose_name='Option3')),
                ('op4', models.CharField(max_length=200, verbose_name='Option4')),
                ('Answer', models.CharField(max_length=200)),
                ('subCategory', models.CharField(choices=[(4, 'Time and Work'), (5, 'Train'), (6, 'Speed and Distance'), (7, 'Profit and Loss')], max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Quiz_SubCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Tag Name')),
            ],
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('rollno', models.CharField(max_length=6)),
                ('dept', models.CharField(max_length=6)),
                ('year', models.CharField(max_length=5)),
                ('Question_solved', models.TextField()),
                ('Question_partially_solved', models.TextField()),
                ('total_score', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TestName', models.CharField(max_length=200)),
                ('QuizTagName', models.IntegerField(choices=[(4, 'Time and Work'), (5, 'Train'), (6, 'Speed and Distance'), (7, 'Profit and Loss')], verbose_name='Quiz Tags')),
                ('ProgrammingTagName', models.IntegerField(choices=[(1, 'Strings'), (2, 'Dynamic Programming'), (3, 'Arrays'), (4, 'Data Structures')], verbose_name='Programming Tags')),
                ('StartDate', models.DateField(blank=True, verbose_name='Start Date')),
                ('StartTime', models.TimeField(blank=True, verbose_name='Start Time')),
                ('EndDate', models.DateField(blank=True, verbose_name='End Date')),
                ('EndTime', models.TimeField(blank=True, verbose_name='End Time')),
                ('Batch', models.IntegerField(choices=[(1, '2013-2017'), (2, '2014-2018'), (3, '2015-2019'), (4, '2016-2020')])),
                ('Department', models.CharField(choices=[(1, 'CSE'), (2, 'CIVIL'), (3, 'EEE'), (4, 'ECE'), (5, 'IT'), (6, 'MECH')], max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('rollno', models.CharField(max_length=6)),
                ('dept', models.CharField(max_length=6)),
                ('year', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Verbal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('op1', models.CharField(max_length=200, verbose_name='Option1')),
                ('op2', models.CharField(max_length=200, verbose_name='Option2')),
                ('op3', models.CharField(max_length=200, verbose_name='Option3')),
                ('op4', models.CharField(max_length=200, verbose_name='Option4')),
                ('Answer', models.CharField(max_length=200)),
                ('subCategory', models.CharField(choices=[(1, 'Comprehension'), (2, 'Error Identification')], max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Verbal_SubCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Tag Name')),
            ],
        ),
    ]
